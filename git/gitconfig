[user]
	name = Mark Biek
	email = mark.biek@automattic.com
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJyDpSKQFXXgcoxciZEPSYeKeeUkPUNJaSyfabfKwOyY

[gpg]
	format = ssh

[gpg "ssh"]
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign

[commit]
	gpgsign = true

[color]
	ui = auto
	interactive = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[core]
	editor = vim
	excludesfile = /Users/mark/.gitignore
	fileMode = false
	text=auto
	#pager = less -+F -+X
	pager = delta

[interactive]
	diffFilter = delta --color-only

[delta]
	navigate = true

[merge]
	conflictstyle = diff3

[diff]
	colorMoved = default

[pull]
	rebase = false

[rebase]
	autosquash = true

[remote]
	pushDefault = origin

[push]
	default = current

[alias]
	alias = config --get-regexp alias
	nm = branch --no-merged     
	branches = branch -a
	st = status
	s = status --short --branch
	cp = cherry-pick
	co = checkout
	cob = checkout -b
	cm = !git add -A && git commit
	fixup = !git add -A && git commit --fixup
	r = reset
	amend = commit -a --amend --no-edit
	ec = config --global -e
	cleanupdev = !git branch --merged dev | grep -v 'dev$' | xargs  git branch -d
	cleanuplocal = !git remote prune origin && git gc && git clean -df
	cleanupmaster = !git branch --merged master | grep -v 'master$' | xargs  git branch -d
	pushup = !git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
	sync = !git upstream --no-verify && git pushup --no-verify
	pullbase = !~/dev/dotfiles/git/pullbase.py --remote-branch 
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	upstream = !git pull upstream $(git rev-parse --abbrev-ref HEAD) --rebase --prune $@
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = !git add -A && git commit -m 'WIP'
	undo = reset HEAD~1 --mixed
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	delbr = branch -d
	delrbr = push origin --delete
	rcont = !git add -A && git rebase --continue

    #log aliases
	l = log --oneline --decorate
	lg = log --graph --abbrev-commit --decorate --format=format:'%w(80, 0, 2)%C(bold yellow)%H%C(reset)%n%C(bold red)%ai%C(reset) %C(bold green)(%ar)%C(reset) %C(bold blue)(%h)%C(reset) %C(bold yellow)%d%C(reset)%n''%w(80, 2, 4)%s %n- %an% %n' --all
	hist = log --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset%C(yellow)%d%Creset %Cgreen(%cr)%Creset%n%w(80,8,8)%s' --graph
	histfull = log --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset%C(yellow)%d%Creset %Cgreen(%cr)%Creset%n%w(80,8,8)%s%n' --graph --name-status
	llog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=iso
	changelog = log --pretty=format:'%Cgreen%d %Creset%s' --date=iso
	ls = log --oneline --format=format:'%h %an %ad' --name-status
	lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
	s = "!git status && git push-status #" # Status including delta from @{push}.
	# Show the status of this branch relative to @{push}.
	push-status = "! push_branch=$(git push-branch 2>/dev/null) || { echo \"No push branch set.\" && exit 0; } \
	; both=$(git rev-list --left-right --count HEAD...@{push}) \
	; [[ $both == '0    0' ]] && echo \"Your branch is up to date with push branch $push_branch.\" \
	|| echo \"Your branch is ${both%%   *} commit(s) ahead and ${both##*    } commit(s) behind push branch $push_branch.\" #"


[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[init]
	defaultBranch = main
